Aquí tienes el archivo corregido y formateado correctamente en inglés, con títulos más resaltados y comentarios estructurados para que suenen científicos y claros. No modifiqué nada del código.

# Namibia16s - Preprocessing and Analysis Pipeline

## 1. Data Transfer from MinION to Local Server

To transfer files **to** the remote server:

```bash
rsync -PavH /path/to/source/data/on/laptop/....etc raven:/ptmp/user/folder

To copy files from the remote server:

rsync -PavH raven:/ptmp/source/data...etc /Users/path/to/destination/local/

Example:

rsync -PavH /Users/u_erazo/Documents/LABbook/2024/Namibia_sequencing/pod5/pod5/ raven:/ptmp/merazo/Namibia16s/pod5/pod5/

2. Basecalling, Filtering, and Demultiplexing using ONT Dorado
2.1. Installation of Dorado on HPC

Create a directory for Dorado:

mkdir dorado
cd dorado

Download the latest Dorado version:

wget https://cdn.oxfordnanoportal.com/software/analysis/dorado-0.9.1-linux-x64.tar.gz
tar -xf dorado-0.9.1-linux-x64.tar.gz
mv dorado-0.9.1-linux-x64 0.9.1

Verify that Dorado is correctly installed:

/u/merazo/dorado/0.9.1/dorado-0.9.1-linux-x64/bin/dorado --version

2.2. Running the Basecalling Script

Date: 27.02.2025

Save the following script and submit it using sbatch:

sbatch dorado_basecall_Namibia.sbatch

#!/bin/bash -l
#SBATCH --job-name=dorado-basecall
#SBATCH --mail-type=FAIL,END  
#SBATCH --mail-user=erazo@mpiib-berlin.mpg.de 
#SBATCH --output=/u/merazo/data/common_logs/dorado/Namibia/dorado-basecall%x_%j.out
#SBATCH --error=/u/merazo/data/common_logs/dorado/Namibia/dorado-basecall%x_%j.err
#SBATCH --chdir=./
#SBATCH --ntasks=1
#SBATCH --constraint="gpu"
#SBATCH --gres=gpu:a100:1
#SBATCH --cpus-per-task=18
#SBATCH --mem=125000
#SBATCH --time=24:00:00

# Load CUDA
module load cuda/11.4

# Define directories and file paths
POD5_DIR="/ptmp/merazo/Namibia16s/pod5/pod5/"
OUTPUT_DIR="/ptmp/merazo/Namibia16s/output/fastq_20240227/"
BASECALLS_BAM="/ptmp/merazo/Namibia16s/output/Namibia_16S_basecalls_ONT_20240227.bam"
SUMMARY_FILE_BEFORE="/ptmp/merazo/Namibia16s/output/summaryNamibia_beforeFiltering_20240227.txt"
SUMMARY_FILE_AFTER="/ptmp/merazo/Namibia16s/output/summaryNamibia_afterFiltering_20240227.txt"
FILTERED_BAM="/ptmp/merazo/Namibia16s/output/Namibia_16S_basecalls_afterFiltering_ONT_20240227.bam"

# Basecalling
srun /u/merazo/dorado/0.9.1/dorado-0.9.1-linux-x64/bin/dorado basecaller --recursive --device cuda:all sup --min-qscore 10 $POD5_DIR > $BASECALLS_BAM

# Generate summary statistics before filtering
srun /u/merazo/dorado/0.9.1/dorado-0.9.1-linux-x64/bin/dorado summary $BASECALLS_BAM > $SUMMARY_FILE_BEFORE

# Filter reads based on sequence length (800-1600 bases)
samtools view -h $BASECALLS_BAM | awk 'length($10) >= 800 && length($10) <= 1600 || $1 ~ /^@/' | samtools view -b -o $FILTERED_BAM

# Generate summary statistics after filtering
srun /u/merazo/dorado/0.9.1/dorado-0.9.1-linux-x64/bin/dorado summary $FILTERED_BAM > $SUMMARY_FILE_AFTER

# Run demultiplexing
srun /u/merazo/dorado/0.9.1/dorado-0.9.1-linux-x64/bin/dorado demux --emit-fastq --kit-name EXP-PBC096 --output-dir $OUTPUT_DIR $FILTERED_BAM

To check the status of the job submission:

squeue -u <username>

3. Quality Control
3.1. Summary Statistics with Samtools

Run samtools stats to summarize BAM file statistics:
Before Filtering:

samtools stats Namibia_16S_basecalls_ONT_20240227.bam > statistics_Namibia_16S_basecalls_ONT_20240227.txt

After Filtering:

samtools stats Namibia_16S_basecalls_afterFiltering_ONT_20240227.bam > statistics_Namibia_16S_basecalls_afterFiltering_ONT_20240227.txt

3.2. Visualization with NanoPlot

NanoPlot --summary /ptmp/merazo/Namibia16s/output/summaryNamibia_beforeFiltering_20240227.txt --loglength -o /ptmp/merazo/Namibia16s/output/Nanoplot/before_filtering_20250227/

NanoPlot --summary /ptmp/merazo/Namibia16s/output/summaryNamibia_afterFiltering_20240227.txt --loglength -o /ptmp/merazo/Namibia16s/output/Nanoplot/after_filtering_20250227/

Copy the quality control results to the local machine:

rsync -PavH raven:/ptmp/merazo/Namibia16s/output/Nanoplot/ /Users/u_erazo/Documents/LABbook/2024/Namibia_sequencing/dorado_0_9_1/

4. Read Count per Barcode

cd /ptmp/merazo/Namibia16s/output/fastq_20240227

for file in *.fastq; do echo "$file: $(grep -c '^@' "$file") reads"; done > reads_per_barcode.txt

rsync -PavH raven:/ptmp/merazo/Namibia16s/output/fastq_20240227/reads_per_barcode.txt /Users/u_erazo/Documents/LABbook/2024/Namibia_sequencing/dorado_0_9_1/

5. EMU Alignment
5.1. Standard Alignment (Default Settings)

emu --version  # emu v3.5.0

source /u/merazo/miniconda3/bin/activate EMU

cd /ptmp/merazo/Namibia16s/output/

for file in /ptmp/merazo/Namibia16s/output/fastq_20240227/*.fastq
do
    emu abundance \
        --keep-counts \
        --db /u/merazo/emu/Silva_database \
        --output-dir /ptmp/merazo/Namibia16s/output/EMU/standard/ \
        ${file}
done

5.2. Modified Alignment Parameters

for file in /ptmp/merazo/Namibia16s/output/fastq_20240227/*.fastq
do
    emu abundance \
        --keep-counts \
        --type map-ont \
        --min-abundance 0.000000000001 \
        --keep-read-assignment \
        --keep-files \
        --output-unclassified \
        --db /u/merazo/emu/Silva_database \
        --output-dir /ptmp/merazo/Namibia16s/output/EMU/Melanie/ \
        "$file"
done

Copy EMU output files to local storage:

rsync -PavH raven:/ptmp/merazo/Namibia16s/output/EMU/ /Users/u_erazo/Documents/LABbook/2024/Namibia_sequencing/dorado_0_9_1/
