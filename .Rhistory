# Define more specific plot limits for the area in Namibia
xlim <- c(18, 19)  # Adjust these based on your exact area of interest
ylim <- c(-22.8, -22.5)  # Adjust these based on your exact area of interest
# Get the world map data
world <- ne_countries(scale = "medium", returnclass = "sf")
# Plot the map zoomed to the specific area in Namibia
ggplot(data = world) +
geom_sf() +
geom_point(data = df, aes(x = Longitude, y = Latitude, color = Morphology_species), size = 3) +
coord_sf(xlim = xlim, ylim = ylim, expand = FALSE) +
theme_minimal() +
labs(title = "Geolocations of Rodents in a Specific Area in Namibia by Morphology Species") +
scale_color_discrete(name = "Morphology Species")
ylim <- c(-22.7, -22.55)  # Adjust these based on your exact area of interest
# Get the world map data
world <- ne_countries(scale = "medium", returnclass = "sf")
# Plot the map zoomed to the specific area in Namibia
ggplot(data = world) +
geom_sf() +
geom_point(data = df, aes(x = Longitude, y = Latitude, color = Morphology_species), size = 3) +
coord_sf(xlim = xlim, ylim = ylim, expand = FALSE) +
theme_minimal() +
labs(title = "Geolocations of Rodents in a Specific Area in Namibia by Morphology Species") +
scale_color_discrete(name = "Morphology Species")
install.packages(c("tmap", "tmaptools", "sf"))
install.packages(c("tmap", "tmaptools", "sf"))
library(tmap)
library(tmaptools)
library(sf)
df_sf <- st_as_sf(df, coords = c("Longitude", "Latitude"), crs = 4326)
# convert the df into a spatial df
df_sf <- st_as_sf(df, coords = c("Longitude", "Latitude"), crs = 4326)
bb <- st_bbox(df_sf)  # Define bounding box based on your data
tmap_mode("view")  # Use this for interactive maps
tm_basemap("OpenStreetMap", bbox = bb) +  # You can change "OpenStreetMap" to another source if you prefer
tm_shape(df_sf) +
tm_dots(col = "Morphology_species",
title = "Species",
palette = "Set1",
size = 0.5,
border.col = "white",
id = "Sample_ID") +  # This will show the Sample_ID on hover in the interactive map
tm_borders(lwd = 2)
# convert the df into a spatial df
df_sf <- st_as_sf(df, coords = c("Longitude", "Latitude"), crs = 4326)
tmap_mode("view")  # Use this for interactive maps
tm_shape(df_sf) +  # This is where we provide the bounding box info
tm_basemap("OpenStreetMap") +
tm_dots(col = "Morphology_species",
title = "Species",
palette = "Set1",
size = 0.5,
border.col = "white",
id = "Sample_ID") +  # This will show the Sample_ID on hover in the interactive map
tm_borders(lwd = 2)
tm_basemap("OpenStreetMap") +
tm_shape(df_sf) +
tm_dots(col = "Morphology_species",
title = "Species",
palette = "Set1",
size = 0.5,
border.col = "white",
id = "Sample_ID")
library(dplyr)
library(tidyr)
library(ggplot2)
library(tmap)
library(tmaptools)
library(sf)
df <- read.csv("Data/Field_tracking_data/Rodents_catching_data.csv")
glimpse(df)
# convert the df into a spatial df
df_sf <- st_as_sf(df, coords = c("Longitude", "Latitude"), crs = 4326)
tm_basemap("OpenStreetMap") +
tm_shape(df_sf) +
tm_dots(col = "Morphology_species",
title = "Species",
palette = "Set1",
size = 0.5,
border.col = "white",
id = "Sample_ID")
glimpse(df)
# correct mistakes
df$Morphology_species <- gsub("Vole\\?", "Vole", df$Morphology_species)
# convert the df into a spatial df
df_sf <- st_as_sf(df, coords = c("Longitude", "Latitude"), crs = 4326)
tm_basemap("OpenStreetMap") +
tm_shape(df_sf) +
tm_dots(col = "Morphology_species",
title = "Species",
palette = "Set1",
size = 0.5,
border.col = "white",
id = "Sample_ID")
library(rnaturalearth)
library(sf)
world <- ne_countries(scale = "medium", returnclass = "sf")
p <- ggplot(data = world) +
geom_sf() +
geom_point(data = df, aes(x = Longitude, y = Latitude, color = Morphology_species), size = 3) +
coord_sf(xlim = c(min(df$Longitude)-0.5, max(df$Longitude)+0.5), ylim = c(min(df$Latitude)-0.5, max(df$Latitude)+0.5)) +
theme_minimal() +
labs(title = "Geolocations of Rodents in Namibia by Morphology Species") +
scale_color_discrete(name = "Morphology Species")
ggsave(filename = "my_map.png", plot = p, width = 10, height = 7, dpi = 300)
p
tm_basemap("OpenStreetMap") +
tm_shape(df_sf) +
tm_dots(col = "Morphology_species",
title = "Species",
palette = "Set1",
size = 0.5,
border.col = "white",
id = "Sample_ID")
library(cowplot)
View(df)
View(df)
# map on location and structure where the rodent was caught
tm_basemap("OpenStreetMap") +
tm_shape(df_sf) +
tm_dots(col = "Location_type",
title = "Species",
palette = "Set1",
size = 0.5,
border.col = "white",
id = "Sample_ID")
img1 <- ggdraw() + draw_image("Figures/Maps/2.Elephant_lodge_location_species.png")
img2 <- ggdraw() + draw_image("Figures/Maps/5.Elephant_lodge_location_type.png")
library(magick)
install.packages("magick")
img1 <- ggdraw() + draw_image("Figures/Maps/2.Elephant_lodge_location_species.png")
img2 <- ggdraw() + draw_image("Figures/Maps/5.Elephant_lodge_location_type.png")
combined_plot <- plot_grid(
img1, img2,
labels = c("A", "B"),     # Labels for each panel
label_size = 14,          # Adjust size as needed
ncol = 2                  # Number of columns. Use nrow for number of rows.
)
print(combined_plot)
combined_plot <- plot_grid(
img1, img2,
labels = c("A", "B"),     # Labels for each panel
label_size = 14,          # Adjust size as needed
ncol = 1
nrow = 2
print(combined_plot)
combined_plot <- plot_grid(
img1, img2,
labels = c("A", "B"),     # Labels for each panel
label_size = 14,          # Adjust size as needed
ncol = 1
nrow = 2
combined_plot <- plot_grid(
img1, img2,
labels = c("A", "B"),     # Labels for each panel
label_size = 14,          # Adjust size as needed
ncol = 1,
nrow = 2
# Number of columns. Use nrow for number of rows.
)
print(combined_plot)
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("A", "", "B"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1) # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
)
print(combined_plot)
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("Rodent species", "", "Location of rodents"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1) # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
)
print(combined_plot)
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("A. Rodent species", "", "B. Location of rodents"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1) # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
)
print(combined_plot)
ggsave("Lodge_location.png", combined_plot, width = 10, height = 7, dpi = 300)
img2 <- ggdraw() + draw_image("Figures/Maps/6.Cheetah_research_station_type.png")
# Location: Bildah
img1 <- ggdraw() + draw_image("Figures/Maps/3.Bildah_species.png")
img2 <- ggdraw() + draw_image("Figures/Maps/4.Bildah_type.png")
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("A. Rodent species", "", "B. Location of rodents"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1) # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
)
print(combined_plot)
ggsave("Lodge_location.png", combined_plot, width = 10, height = 7, dpi = 300)
# Location: Cheetah research station
img1 <- ggdraw() + draw_image("Figures/Maps/3.Cheetah_research_station.png")
img2 <- ggdraw() + draw_image("Figures/Maps/6.Cheetah_research_station_type.png")
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("A. Rodent species", "", "B. Location of rodents"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1) # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
)
print(combined_plot)
ggsave("Cheetah_location.png", combined_plot, width = 10, height = 7, dpi = 300)
source("~/GitHub/Namibia_project/R/Analysis/Geolocations_mice.R")
ggsave("Cheetah_location.png", combined_plot, width = 10, height = 7, dpi = 300)
source("~/GitHub/Namibia_project/R/Analysis/Geolocations_mice.R")
source("~/GitHub/Namibia_project/R/Analysis/Geolocations_mice.R")
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("A. Rodent species", "", "B. Location of rodents"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1), # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
label_y = 1.01            # Adjust this value to move the label closer to the plot
)
print(combined_plot)
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("A. Rodent species", "", "B. Location of rodents"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1), # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
label_y = 0.5            # Adjust this value to move the label closer to the plot
)
print(combined_plot)
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("A. Rodent species", "", "B. Location of rodents"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1), # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
label_y = 1           # Adjust this value to move the label closer to the plot
)
print(combined_plot)
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("A. Rodent species", "", "B. Location of rodents"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1), # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
label_y = 0.7         # Adjust this value to move the label closer to the plot
)
print(combined_plot)
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("A. Rodent species", "", "B. Location of rodents"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1), # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
label_y = 0.6         # Adjust this value to move the label closer to the plot
)
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("A. Rodent species", "", "B. Location of rodents"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1), # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
label_y = 0.8       # Adjust this value to move the label closer to the plot
)
print(combined_plot)
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("C. Rodent species", "", "D. Location of rodents"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1) # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
label_y = 0.8 )
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("C. Rodent species", "", "D. Location of rodents"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1) # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
label_y = 0.8)
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("C. Rodent species", "", "D. Location of rodents"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1) # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
label_y = 1)
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("C. Rodent species", "", "D. Location of rodents"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1), # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
label_y = 1)
print(combined_plot)
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("C. Rodent species", "", "D. Location of rodents"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1), # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
label_y = 0.9)
print(combined_plot)
combined_plot <- plot_grid(
img1, NULL, img2,         # The NULL creates an empty column for spacing
labels = c("A. Rodent species", "", "B. Location of rodents"), # Labels for each panel. The empty label ("") corresponds to the NULL/spacing column.
label_size = 14,          # Adjust size as needed
ncol = 3,                 # Increase to 3 because of the added NULL/spacing column
rel_widths = c(1, 0.1, 1), # Relative widths of the columns. Adjust the 0.1 to increase/decrease spacing.
label_y = 0.9       # Adjust this value to move the label closer to the plot
)
print(combined_plot)
source("~/GitHub/Namibia_project/R/Analysis/Geolocations_mice.R")
source("~/GitHub/Namibia_project/R/Analysis/Geolocations_mice.R")
source("~/GitHub/Namibia_project/R/Analysis/Geolocations_mice.R")
length(df$Sex == "male")
# How many males?
df %>%
group_by(sex) %>% summarise(mean)
View(df)
# How many males?
df %>%
group_by(Sex) %>%
summarise(mean)
# How many males?
df %>%
group_by(Sex) %>%
summarise(mean())
# How many males?
df %>%
group_by(Sex) %>%
summarise()
# How many males?
df %>%
group_by(Sex) %>%
summarise(n())
View(df)
# Average weight per species
df %>%
group_by(Morphology_species) %>%
summarise(mean(weight))
View(df)
# Average weight per species
df %>%
group_by(Morphology_species) %>%
summarise(mean(Weight_g))
# Average weight per species
df %>%
group_by(Morphology_species) %>%
summarise(mean(Weight_g, na.rm = TRUE))
# Average weight per species
# Average weight per species
figure_df <- df %>%
group_by(Morphology_species) %>%
summarise(mean_weight = mean(Weight_g, na.rm = TRUE))
# To view the new data frame
View(figure_df)
View(figure_df)
# Plot
p <- ggplot(figure_df, aes(x = Morphology_species, y = mean_weight)) +
geom_bar(stat="identity", fill="blue") +
labs(title = "Average Weight per Species", x = "Species", y = "Average Weight (g)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
# Plot
p <- ggplot(figure_df, aes(x = Morphology_species, y = mean_weight)) +
geom_bar(stat="identity", fill="blue") +
labs(title = "Average Weight per Species", x = "Species", y = "Average Weight (g)") +
theme_minimal()# +
#  theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
source("~/GitHub/Namibia_project/R/Analysis/Geolocations_mice.R")
# Plot
p <- ggplot(figure_df, aes(x = Morphology_species, y = mean_weight)) +
geom_bar(stat="identity", fill="green") +
labs(title = "Average Weight per Species", x = "Species", y = "Average Weight (g)") +
theme_minimal()# +
#  theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
# Plot
p <- ggplot(figure_df, aes(x = Morphology_species, y = mean_weight)) +
geom_bar(stat="identity", fill="darkgreen") +
labs(title = "Average Weight per Species", x = "Species", y = "Average Weight (g)") +
theme_minimal()# +
#  theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
# Average weight per species
figure_df <- df %>%
group_by(Morphology_species) %>%
summarise(mean_weight = mean(Weight_g, na.rm = TRUE)) %>%
arrange(-mean_weight)  # Arrange by mean_weight in descending order
# To view the new data frame
View(figure_df)
# Plot
p <- ggplot(figure_df, aes(x = Morphology_species, y = mean_weight)) +
geom_bar(stat="identity", fill="blue") +
labs(title = "Average Weight per Species", x = "Species", y = "Average Weight (g)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save the plot as an image
ggsave("average_weight_per_species.png", p, width = 10, height = 7, dpi = 300)
p
# Average weight per species
figure_df <- df %>%
group_by(Morphology_species) %>%
summarise(mean_weight = mean(Weight_g, na.rm = TRUE)) %>%
arrange(-mean_weight)  # Arrange by mean_weight in descending order
# To view the new data frame
View(figure_df)
# Plot
p <- ggplot(figure_df, aes(x = Morphology_species, y = mean_weight)) +
geom_bar(stat="identity", fill="blue") +
labs(title = "Average Weight per Species", x = "Species", y = "Average Weight (g)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save the plot as an image
ggsave("average_weight_per_species.png", p, width = 10, height = 7, dpi = 300)
p
figure_df$Morphology_species <- factor(figure_df$Morphology_species, levels = figure_df$Morphology_species)
# Plot
p <- ggplot(figure_df, aes(x = Morphology_species, y = mean_weight)) +
geom_bar(stat="identity", fill="blue") +
labs(title = "Average Weight per Species", x = "Species", y = "Average Weight (g)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save the plot as an image
ggsave("average_weight_per_species.png", p, width = 10, height = 7, dpi = 300)
p
# Plot
p <- ggplot(figure_df, aes(x = Morphology_species, y = mean_weight)) +
geom_bar(stat="identity", fill="orchid1") +
labs(title = "Average Weight per Species", x = "Species", y = "Average Weight (g)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save the plot as an image
ggsave("average_weight_per_species.png", p, width = 10, height = 7, dpi = 300)
p
# Save the plot as an image
ggsave("Figures/Plots/average_weight_per_species.png", p, width = 10, height = 7, dpi = 300)
p
unique(df$Morphology_species)
unique(df$Sex)
df$Sex <-
gsub("", "unidentified", df$Sex)
df$Sex <-
gsub("63", "unidentified", df$Sex)
# Sex counts
sex_counts <- df %>%
filter(!is.na(Sex)) %>% # Filter out any rows with missing Sex data
group_by(Sex) %>%
summarise(count = n())
# Sex counts
sex_counts <- df %>%
filter(!is.na(Sex)) %>% # Filter out any rows with missing Sex data
group_by(Sex) %>%
summarise(count = n())
# Plot
p <- ggplot(sex_counts, aes(x = "", y = count, fill = Sex)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) + # Transform the bar chart into a pie chart
labs(title = "Distribution of Mice by Sex", fill = "Sex") +
theme_minimal() +
theme(axis.text.x = element_blank(), # Hide x-axis labels
axis.title.x = element_blank(), # Hide x-axis title
axis.title.y = element_blank()) # Hide y-axis title
# Save the plot as an image
ggsave("sex_distribution_pie_chart.png", p, width = 7, height = 7, dpi = 300)
p
View(df)
library(magick)
df <- read.csv("Data/Field_tracking_data/Rodents_catching_data.csv")
glimpse(df)
# correct mistakes
df$Morphology_species <-
gsub("Vole\\?", "Vole", df$Morphology_species)
df$Morphology_species <-
gsub("House_mouse\\?", "House_mouse", df$Morphology_species)
df$Sex <-
gsub("NA", "unidentified", df$Sex)
df$Sex <-
gsub("63", "unidentified", df$Sex)
View(df)
df$Sex <-
gsub(NA, "unidentified", df$Sex)
df <- read.csv("Data/Field_tracking_data/Rodents_catching_data.csv")
glimpse(df)
# correct mistakes
df$Morphology_species <-
gsub("Vole\\?", "Vole", df$Morphology_species)
df$Morphology_species <-
gsub("House_mouse\\?", "House_mouse", df$Morphology_species)
df <- df %>%
mutate(Sex = ifelse(Sex == "", "unidentified", Sex))
df$Sex <-
gsub("63", "unidentified", df$Sex)
View(df)
source("~/GitHub/Namibia_project/R/Analysis/Geolocations_mice.R")
# Plot
p <- ggplot(sex_counts, aes(x = "", y = count, fill = Sex)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) + # Transform the bar chart into a pie chart
labs(title = "Distribution of Mice by Sex", fill = "Sex") +
theme_minimal() +
theme(axis.text.x = element_blank(), # Hide x-axis labels
axis.title.x = element_blank(), # Hide x-axis title
axis.title.y = element_blank()) # Hide y-axis title
p
# Save the plot as an image
ggsave("Figures/Plots/sex_distribution_pie_chart.png", p, width = 7, height = 7, dpi = 300)
