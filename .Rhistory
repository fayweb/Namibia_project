# ************************************************************
message("ðŸ“ˆ Calculating alpha diversity (Shannon, Observed, InvSimpson)...")
# ------------------------------------------------------------
# Step 3: Visualize Alpha Diversity (Shannon + Others)
# ------------------------------------------------------------
# Round OTU table to integers (required by estimate_richness)
otu_table(ps) <- otu_table(round(otu_table(ps)), taxa_are_rows = TRUE)
# Compute alpha diversity metrics
alpha_df <- phyloseq::estimate_richness(ps,
measures =
c("Observed", "Shannon", "InvSimpson")) %>%
tibble::rownames_to_column("Sample_ID") %>%
left_join(sample_data(ps) %>%
data.frame() %>%
tibble::rownames_to_column("Sample_ID"),
by = "Sample_ID")
# Note: estimate_richness warning about missing singletons is expected
# because the dataset has been decontaminated and filtered
# Create folder if it doesn't exist
dir.create(file.path(results_dir, "Tables", "16S_QC"),
recursive = TRUE, showWarnings = FALSE)
# Save alpha diversity table
write_csv(alpha_df, file.path(results_dir, "Tables", "16S_QC",
"alpha_diversity_metrics.csv"))
# Panel plot: diversity metrics per sample type
p_alpha <- alpha_df %>%
pivot_longer(cols = c(Observed, Shannon, InvSimpson),
names_to = "Metric", values_to = "Value") %>%
ggplot(aes(x = sample_or_control, y = Value, fill = sample_or_control)) +
geom_boxplot(alpha = 0.5, outlier.shape = NA) +
geom_jitter(width = 0.2, alpha = 0.6, size = 1.5) +
facet_wrap(~Metric, scales = "free_y") +
theme_minimal() +
labs(title = "Alpha Diversity by Sample Type",
x = "Sample Type",
y = "Diversity Metric Value") +
theme(
strip.text = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 11),
axis.title = element_text(size = 13),
legend.position = "none"
)
# Save plot
ggsave(file.path(results_dir, "Figures", "16S_QC",
"alpha_diversity_panel.jpeg"),
plot = p_alpha, width = 8, height = 5, dpi = 300)
message(
"ðŸ“ˆ Saved alpha diversity panel to: Figures/16S_QC/alpha_diversity_panel.jpeg")
# ------------------------------------------------------------
# Step 5: Visualize Alpha Diversity (Shannon + Others)
# ------------------------------------------------------------
# Round OTU table to integers (required by estimate_richness)
otu_table(ps) <- otu_table(round(otu_table(ps)), taxa_are_rows = TRUE)
# Compute alpha diversity metrics
alpha_df <- phyloseq::estimate_richness(
ps, measures =
c("Observed", "Shannon", "InvSimpson")) %>%
tibble::rownames_to_column("Sample_ID") %>%
left_join(sample_data(ps) %>%
data.frame() %>%
tibble::rownames_to_column("Sample_ID"),
by = "Sample_ID")
# Note: estimate_richness warning about missing singletons is expected
# because the dataset has been decontaminated and filtered
# Create folder if it doesn't exist
dir.create(file.path(results_dir, "Tables", "16S_QC"),
recursive = TRUE, showWarnings = FALSE)
# Save alpha diversity table
write_csv(alpha_df, file.path(results_dir, "Tables", "16S_QC",
"alpha_diversity_metrics.csv"))
# Boxplot: Diversity metrics per species (ordered by Shannon diversity)
p_alpha_species <- alpha_df %>%
ggplot(aes(x = reorder(Morphology_species, Shannon, FUN = median),
y = Shannon, fill = Morphology_species)) +  # Reorder by median Shannon
geom_boxplot(alpha = 0.6, outlier.shape = NA) +
theme_minimal() +
labs(title = "Alpha Diversity (Shannon) by Species",
x = "Rodent Species", y = "Shannon Diversity Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save species diversity plot
ggsave(file.path(results_dir, "Figures", "16S_QC",
"alpha_diversity_species_ordered.jpeg"),
plot = p_alpha_species, width = 8, height = 5, dpi = 300)
# ************************************************************
# Compare alpha diversity by Rodent Species and Trapping Location
# ************************************************************
# Calculate the median Shannon diversity for each species
alpha_df_ordered <- alpha_df %>%
group_by(Morphology_species) %>%
summarise(median_Shannon = median(Shannon, na.rm = TRUE)) %>%
arrange(median_Shannon)  # Order by median Shannon diversity
# Reorder the Morphology_species factor based on the median Shannon values
alpha_df <- alpha_df %>%
mutate(Morphology_species = factor(Morphology_species,
levels = alpha_df_ordered$Morphology_species))
# Boxplot: Diversity metrics per species (ordered by median Shannon diversity)
p_alpha_species <- alpha_df %>%
ggplot(aes(x = Morphology_species, y = Shannon, fill = Morphology_species)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +
theme_minimal() +
labs(title = "Alpha Diversity (Shannon) by Species",
x = "Rodent Species", y = "Shannon Diversity Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save species diversity plot
ggsave(file.path(results_dir, "Figures", "16S_QC",
"alpha_diversity_species_ordered.jpeg"),
plot = p_alpha_species, width = 8, height = 5, dpi = 300)
message("ðŸ“ˆ Alpha diversity by species (ordered) saved.")
p_alpha_species
# Step 1: Calculate the median Shannon diversity for each species
alpha_df_ordered <- alpha_df %>%
group_by(Morphology_species) %>%
summarise(median_Shannon = median(Shannon, na.rm = TRUE)) %>%
arrange(median_Shannon)  # Order by median Shannon diversity
# Step 2: Reorder the Morphology_species factor based on the median Shannon values
alpha_df <- alpha_df %>%
mutate(Morphology_species = factor(Morphology_species,
levels = alpha_df_ordered$Morphology_species))
# Boxplot: Diversity metrics per species (ordered by median Shannon diversity)
p_alpha_species <- alpha_df %>%
ggplot(aes(x = Morphology_species, y = Shannon, fill = Morphology_species)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +
theme_minimal() +
labs(title = "Alpha Diversity (Shannon) by Species",
x = "Rodent Species", y = "Shannon Diversity Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save species diversity plot
ggsave(file.path(results_dir, "Figures", "16S_QC",
"alpha_diversity_species_ordered.jpeg"),
plot = p_alpha_species, width = 8, height = 5, dpi = 300)
message("ðŸ“ˆ Alpha diversity by species (ordered) saved.")
alpha_df
p_alpha_species
# Boxplot: Diversity metrics per species (ordered by median Shannon diversity)
p_alpha_species <- alpha_df_ordered %>%
ggplot(aes(x = Morphology_species, y = Shannon, fill = Morphology_species)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +
theme_minimal() +
labs(title = "Alpha Diversity (Shannon) by Species",
x = "Rodent Species", y = "Shannon Diversity Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save species diversity plot
ggsave(file.path(results_dir, "Figures", "16S_QC",
"alpha_diversity_species_ordered.jpeg"),
plot = p_alpha_species, width = 8, height = 5, dpi = 300)
# Step 1: Calculate the median Shannon diversity for each species
alpha_df_ordered <- alpha_df %>%
group_by(Morphology_species) %>%
summarise(median_Shannon = median(Shannon, na.rm = TRUE)) %>%
arrange(median_Shannon)  # Order by median Shannon diversity
# Boxplot: Diversity metrics per species (ordered by median Shannon diversity)
p_alpha_species <- alpha_df_ordered %>%
ggplot(aes(x = Morphology_species, y = Shannon, fill = Morphology_species)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +
theme_minimal() +
labs(title = "Alpha Diversity (Shannon) by Species",
x = "Rodent Species", y = "Shannon Diversity Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save species diversity plot
ggsave(file.path(results_dir, "Figures", "16S_QC",
"alpha_diversity_species_ordered.jpeg"),
plot = p_alpha_species, width = 8, height = 5, dpi = 300)
# Step 1: Calculate the median Shannon diversity for each species
alpha_df_ordered <- alpha_df %>%
group_by(Morphology_species) %>%
summarise(median_Shannon = median(Shannon, na.rm = TRUE)) %>%
arrange(median_Shannon)  # Order by median Shannon diversity
# Step 2: Reorder the Morphology_species factor based on the median Shannon values
alpha_df <- alpha_df %>%
mutate(Morphology_species = factor(Morphology_species,
levels = alpha_df_ordered$Morphology_species))
p_alpha_species
# Boxplot: Diversity metrics per species (ordered by median Shannon diversity)
p_alpha_species <- alpha_df %>%
ggplot(aes(x = Morphology_species, y = Shannon, fill = Morphology_species)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +
theme_minimal() +
labs(title = "Alpha Diversity (Shannon) by Species",
x = "Rodent Species", y = "Shannon Diversity Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_alpha_species
alpha_df_ordered
# Step 2: Reorder the Morphology_species factor based on the median Shannon values
alpha_df_ordered <- alpha_df_ordered %>%
mutate(Morphology_species = factor(Morphology_species,
levels = alpha_df_ordered$Morphology_species))
# Boxplot: Diversity metrics per species (ordered by median Shannon diversity)
p_alpha_species <- alpha_df %>%
ggplot(aes(x = Morphology_species, y = Shannon, fill = Morphology_species)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +
theme_minimal() +
labs(title = "Alpha Diversity (Shannon) by Species",
x = "Rodent Species", y = "Shannon Diversity Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_alpha_species
# Boxplot: Diversity metrics per trapping location
p_alpha_location <- alpha_df %>%
ggplot(aes(x = Location_type, y = Shannon, fill = Location_type)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +
theme_minimal() +
labs(title = "Alpha Diversity (Shannon) by Trapping Location",
x = "Trapping Location", y = "Shannon Diversity Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save location diversity plot
ggsave(file.path(results_dir, "Figures", "16S_QC",
"alpha_diversity_location.jpeg"),
plot = p_alpha_location, width = 8, height = 5, dpi = 300)
message("ðŸ“ˆ Saved alpha diversity comparison plots by species and location.")
p_alpha_location
# Boxplot: Diversity metrics per trapping location
p_alpha_location <- alpha_df %>%
arrange(Shannon) %>%
ggplot(aes(x = Location_type, y = Shannon, fill = Location_type)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +
theme_minimal() +
labs(title = "Alpha Diversity (Shannon) by Trapping Location",
x = "Trapping Location", y = "Shannon Diversity Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_alpha_location
# Boxplot: Diversity metrics per trapping location
p_alpha_location <- alpha_df_ordered %>%
ggplot(aes(x = Location_type, y = Shannon, fill = Location_type)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +
theme_minimal() +
labs(title = "Alpha Diversity (Shannon) by Trapping Location",
x = "Trapping Location", y = "Shannon Diversity Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_alpha_location
# Boxplot: Diversity metrics per trapping location
p_alpha_location <- alpha_df_ordered %>%
ggplot(aes(x = Location_type, y = Shannon, fill = Location_type)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +
theme_minimal() +
labs(title = "Alpha Diversity (Shannon) by Trapping Location",
x = "Trapping Location", y = "Shannon Diversity Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_alpha_location
alpha_df_ordered
left_join(alpha_df, by = intersect(colnames(alpha_df), colnames(alpha_df_ordered)) %>%
# Boxplot: Diversity metrics per trapping location
p_alpha_location <- alpha_df_ordered %>%
left_join(alpha_df, by = intersect(colnames(alpha_df), colnames(alpha_df_ordered))) %>%
ggplot(aes(x = Location_type, y = Shannon, fill = Location_type)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +
theme_minimal() +
labs(title = "Alpha Diversity (Shannon) by Trapping Location",
x = "Trapping Location", y = "Shannon Diversity Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_alpha_location
alpha_df_ordered %>%
left_join(alpha_df, by = intersect(colnames(alpha_df), colnames(alpha_df_ordered)))
# Boxplot: Diversity metrics per trapping location
p_alpha_location <- alpha_df_ordered %>%
left_join(alpha_df, by =
intersect(colnames(alpha_df), colnames(alpha_df_ordered))) %>%
ggplot(aes(x = Location_type, y = Shannon, fill = Location_type)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +
theme_minimal() +
labs(title = "Alpha Diversity (Shannon) by Trapping Location",
x = "Trapping Location", y = "Shannon Diversity Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_alpha_location
# Boxplot: Diversity metrics per trapping location
p_alpha_location <- alpha_df_ordered %>%
left_join(alpha_df, by =
intersect(colnames(alpha_df), colnames(alpha_df_ordered))) %>%
ggplot(aes(x = Location_type, y = Shannon, fill = Location_type)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +
theme_minimal() +
labs(title = "Alpha Diversity (Shannon) by Trapping Location",
x = "Trapping Location", y = "Shannon Diversity Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_alpha_location
View(alpha_df_ordered)
View(alpha_df)
# Step 2: Reorder the Morphology_species factor based on the median Shannon values
alpha_df_ordered <- alpha_df %>%
mutate(Morphology_species = factor(Morphology_species,
levels = alpha_df_ordered$Morphology_species))
View(alpha_df_ordered)
# Boxplot: Diversity metrics per species (ordered by median Shannon diversity)
p_alpha_species <- alpha_df %>%
ggplot(aes(x = Morphology_species, y = Shannon, fill = Morphology_species)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +
theme_minimal() +
labs(title = "Alpha Diversity (Shannon) by Species",
x = "Rodent Species", y = "Shannon Diversity Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save species diversity plot
ggsave(file.path(results_dir, "Figures", "16S_QC",
"alpha_diversity_species_ordered.jpeg"),
plot = p_alpha_species, width = 8, height = 5, dpi = 300)
message("ðŸ“ˆ Alpha diversity by species (ordered) saved.")
p_alpha_species
# Boxplot: Diversity metrics per trapping location
p_alpha_location <- alpha_df%>%
ggplot(aes(x = Location_type, y = Shannon, fill = Location_type)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +
theme_minimal() +
labs(title = "Alpha Diversity (Shannon) by Trapping Location",
x = "Trapping Location", y = "Shannon Diversity Index") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_alpha_location
# Round OTU table to integers (required by estimate_richness)
otu_table(ps) <- otu_table(round(otu_table(ps)), taxa_are_rows = TRUE)
# Compute alpha diversity metrics
alpha_df <- phyloseq::estimate_richness(
ps, measures =
c("Observed", "Shannon", "InvSimpson")) %>%
tibble::rownames_to_column("Sample_ID") %>%
left_join(sample_data(ps) %>%
data.frame() %>%
tibble::rownames_to_column("Sample_ID"),
by = "Sample_ID")
# Note: estimate_richness warning about missing singletons is expected
# because the dataset has been decontaminated and filtered
# Create folder if it doesn't exist
dir.create(file.path(results_dir, "Tables", "16S_QC"),
recursive = TRUE, showWarnings = FALSE)
# Save alpha diversity table
write_csv(alpha_df, file.path(results_dir, "Tables", "16S_QC",
"alpha_diversity_metrics.csv"))
# Message to indicate the start of the process
message("ðŸ“ˆ Creating alpha diversity boxplot (ordered by Shannon diversity)...")
# Calculate the median Shannon diversity for each species
alpha_df_ordered <- alpha_df %>%
group_by(Morphology_species) %>%
summarise(median_Shannon = median(Shannon, na.rm = TRUE)) %>%
arrange(median_Shannon)  # Order by median Shannon diversity
# Reorder Morphology_species factor based on the median Shannon values
alpha_df <- alpha_df %>%
mutate(Morphology_species = factor(Morphology_species,
levels = alpha_df_ordered$Morphology_species))
p_alpha_species <- ggplot(alpha_df, aes(x = Morphology_species, y = Shannon, fill = Morphology_species)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +  # Remove outliers for clean visualization
theme_minimal() +  # Use a minimal theme for clarity
labs(
title = "Alpha Diversity (Shannon) by Species",
x = "Rodent Species",
y = "Shannon Diversity Index"
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for better readability
legend.position = "none"  # Hide legend as species are directly labeled
)
p_alpha_species
# Define the output file path for saving the plot
output_file <- file.path(results_dir, "Figures", "16S_QC", "alpha_diversity_species_ordered.jpeg")
# Save the plot as a high-resolution JPEG
ggsave(output_file, plot = p_alpha_species, width = 8, height = 5, dpi = 300)
# Message to confirm that the plot was saved
message("âœ… Alpha diversity by species (ordered) saved to: ", output_file)
# Create the boxplot for Shannon diversity by trapping location
p_alpha_location <- alpha_df %>%
ggplot(aes(x = Location_type, y = Shannon, fill = Location_type)) +
geom_boxplot(alpha = 0.7, outlier.shape = NA, width = 0.6) +  # Increase box width and hide outliers
theme_minimal(base_size = 15) +  # Use minimal theme with larger text
scale_fill_brewer(palette = "Set3") +  # Use a color palette for better aesthetics
labs(
title = "Alpha Diversity (Shannon) by Trapping Location",
x = "Trapping Location", y = "Shannon Diversity Index"
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Rotate x-axis labels for readability
axis.text.y = element_text(size = 12),  # Increase y-axis text size
axis.title = element_text(size = 14),  # Increase axis title size
legend.position = "none",  # Hide the legend as it's unnecessary
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and format title
)
# Display the plot
print(p_alpha_location)
# Define the output file path for saving the plot
output_file <- file.path(results_dir, "Figures", "16S_QC", "alpha_diversity_location.jpeg")
# Save the plot as a high-resolution JPEG
ggsave(output_file, plot = p_alpha_location, width = 8, height = 5, dpi = 300)
message("âœ… Alpha diversity by location (Shannon) saved to: ", output_file)
# ------------------------------------------------------------
# Step 3: Clean up temporary objects
# ------------------------------------------------------------
rm(p_alpha_location)
# ------------------------------------------------------------
# Step 3: Scatter plot of Alpha Diversity (Shannon) vs Longitude
# ------------------------------------------------------------
p_alpha_longitude <- ggplot(alpha_df, aes(x = Longitude, y = Shannon, color = Morphology_species)) +
geom_point(size = 3) +  # Scatter plot points
theme_minimal(base_size = 15) +  # Minimal theme
labs(
title = "Alpha Diversity (Shannon) vs Longitude",
x = "Longitude",
y = "Shannon Diversity Index"
) +
theme(
axis.text.x = element_text(size = 12),  # Increase size for axis labels
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 14),  # Increase axis title size
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center title
) +
scale_color_brewer(palette = "Set3")  # Color by species
# Display Longitude plot
print(p_alpha_longitude)
# ------------------------------------------------------------
# Step 4: Save Longitude plot
# ------------------------------------------------------------
output_longitude_file <- file.path(results_dir, "Figures", "16S_QC", "alpha_diversity_longitude.jpeg")
ggsave(output_longitude_file, plot = p_alpha_longitude, width = 8, height = 5, dpi = 300)
message("âœ… Alpha diversity vs Longitude plot saved to: ", output_longitude_file)
# ------------------------------------------------------------
# Step 5: Clean up environment
# ------------------------------------------------------------
rm(p_alpha_latitude, p_alpha_longitude)
message("ðŸ“ˆ Creating scatter plots for alpha diversity vs geolocation (Latitude and Longitude)...")
# ------------------------------------------------------------
# Step 1: Scatter plot of Alpha Diversity (Shannon) vs Latitude
# ------------------------------------------------------------
p_alpha_latitude <- ggplot(alpha_df, aes(x = Latitude, y = Shannon, color = Morphology_species)) +
geom_point(size = 3) +  # Scatter plot points
theme_minimal(base_size = 15) +  # Minimal theme
labs(
title = "Alpha Diversity (Shannon) vs Latitude",
x = "Latitude",
y = "Shannon Diversity Index"
) +
theme(
axis.text.x = element_text(size = 12),  # Increase size for axis labels
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 14),  # Increase axis title size
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center title
) +
scale_color_brewer(palette = "Set3")  # Color by species
# Display Latitude plot
print(p_alpha_latitude)
# ------------------------------------------------------------
# Step 2: Save Latitude plot
# ------------------------------------------------------------
output_latitude_file <- file.path(results_dir, "Figures", "16S_QC", "alpha_diversity_latitude.jpeg")
ggsave(output_latitude_file, plot = p_alpha_latitude, width = 8, height = 5, dpi = 300)
message("âœ… Alpha diversity vs Latitude plot saved to: ", output_latitude_file)
# ------------------------------------------------------------
# Step 3: Scatter plot of Alpha Diversity (Shannon) vs Longitude
# ------------------------------------------------------------
p_alpha_longitude <- ggplot(alpha_df, aes(x = Longitude, y = Shannon, color = Morphology_species)) +
geom_point(size = 3) +  # Scatter plot points
theme_minimal(base_size = 15) +  # Minimal theme
labs(
title = "Alpha Diversity (Shannon) vs Longitude",
x = "Longitude",
y = "Shannon Diversity Index"
) +
theme(
axis.text.x = element_text(size = 12),  # Increase size for axis labels
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 14),  # Increase axis title size
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center title
) +
scale_color_brewer(palette = "Set3")  # Color by species
# Display Longitude plot
print(p_alpha_longitude)
install.packages("plotly")
# Create a 3D plot with Latitude, Longitude, and Shannon Diversity (as Z-axis)
p_3d <- plot_ly(alpha_df, x = ~Latitude, y = ~Longitude, z = ~Shannon,
color = ~Morphology_species, colors = "Set3",
type = "scatter3d", mode = "markers",
marker = list(size = 5)) %>%
layout(
title = "Alpha Diversity (Shannon) vs Latitude and Longitude",
scene = list(
xaxis = list(title = "Latitude"),
yaxis = list(title = "Longitude"),
zaxis = list(title = "Shannon Diversity Index")
),
showlegend = TRUE
)
# Display the 3D plot
p_3d
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, corncob, scales, ggsci, microViz, ggraph, ggtext,
ComplexHeatmap, plotly)
# Create a 3D plot with Latitude, Longitude, and Shannon Diversity (as Z-axis)
p_3d <- plot_ly(alpha_df, x = ~Latitude, y = ~Longitude, z = ~Shannon,
color = ~Morphology_species, colors = "Set3",
type = "scatter3d", mode = "markers",
marker = list(size = 5)) %>%
layout(
title = "Alpha Diversity (Shannon) vs Latitude and Longitude",
scene = list(
xaxis = list(title = "Latitude"),
yaxis = list(title = "Longitude"),
zaxis = list(title = "Shannon Diversity Index")
),
showlegend = TRUE
)
# Create a 3D plot with Latitude, Longitude, and Shannon Diversity (as Z-axis)
p_3d <- plot_ly(alpha_df, x = ~Latitude, y = ~Longitude, z = ~Shannon,
color = ~Morphology_species, colors = "Set3",
type = "scatter3d", mode = "markers",
marker = list(size = 5)) %>%
layout(
title = "Alpha Diversity (Shannon) vs Latitude and Longitude",
scene = list(
xaxis = list(title = "Latitude"),
yaxis = list(title = "Longitude"),
zaxis = list(title = "Shannon Diversity Index")
),
showlegend = TRUE
)
# Display the 3D plot
p_3d
