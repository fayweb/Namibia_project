# 5.2: Decontamination (Blanks & Controls) -------------------
source(file.path(scripts_dir, "Analysis", "1_decontamination_separates.R"))
# 5.3: Preprocessing / Filtering -----------------------------
source(file.path(scripts_dir, "Analysis", "2_quality_summary_stats.R"))
# 5.4: Alpha Diversity ----------------------------------------
source(file.path(scripts_dir, "Analysis", "3_alpha_diversity.R"))
# 5.5: Beta Diversity -----------------------------------------
source(file.path(scripts_dir, "Analysis", "04a_beta_distance_ordination.R"))
source(file.path(scripts_dir, "Analysis", "04b_beta_pca_clr_taxa.R"))
message("ðŸ”¬ Starting the creation of compositional plos..")
# Load object
ps <- readRDS(file.path(processed_data, "phyloseq_16s_decontaminated.rds"))
# ***********************************************************
# Title: Namibia Rodent Project - Data Processing & Analysis
# Purpose: This script executes all processing & analysis steps
#          for the rodent microbiome sequencing study.
#
# Authors: Fay Webster, Marly Erazo, Otto Netzel, Lilla Jordan,
#          Emanuel Heitlinger, Conor Noonan, Dong Xia, Melanie Hay
#
# ***********************************************************
# ***********************************************************
# ***********************************************************
# Part 0: 16S Nanopore Preprocessing (External HPC Pipeline)
# ***********************************************************
# Note: The raw 16S Nanopore data were preprocessed outside of R
#       using a shell-based pipeline executed on the MPCDF cluster.
#
# ðŸ§ª Step 0.1: Basecalling & Demultiplexing (Dorado)
# --------------------------------------------------
# Tool: ONT Dorado
# Script: Scripts/Basecalling/dorado_basecall_mpcdf.slurm
#
# Key components:
#   - CUDA module loaded via `module load cuda/11.4`
#   - Basecalling with `--min-qscore 10`
#   - Outputs: BAM files and summary stats
#   - Demultiplexing using `--kit-name EXP-PBC096`
#
# ðŸ“‚ Outputs:
#   - Basecalled reads:         data/raw/ont_fastq/
#   - Summary & BAM:            data/raw/ont_fastq/*.bam, *.txt
# ðŸ§¬ Step 0.2: Quality Filtering & Length Trimming
# --------------------------------------------------
# Filtering performed for full-length 16S reads (1400â€“1800 bp).
# Quality control and stats generated via:
#   - NanoPlot
#   - samtools stats
# Summary metrics (pre- and post-filtering):
#   â–¸ Mean read quality:       Q15.6
#   â–¸ Number of reads:         ~1.57M
#   â–¸ Read length N50:         ~1,393 bp
#   â–¸ Percent reads > Q10:     98.1%
#   â–¸ Percent reads > Q15:     65.1%
#
# ðŸ“Š Quality report:
#   - NanoPlot HTML report (interactive):
#     â–¸ data/raw/16S_sequencing/quality/NanoPlot-report.html
# ðŸ§¬ Step 0.3: Taxonomic Classification (EMU)
# --------------------------------------------------
# Tool: EMU (Exact Mapping of 16S reads)
# Script: Scripts/Basecalling/emu_script.slurm
#
# Key components:
#   - Conda environment activation (`EMU`)
#   - Looping over demultiplexed FASTQ files
#   - Running `emu abundance` with the SILVA database
#
# ðŸ“‚ Outputs:
#   - Taxonomic abundance tables: data/processed/ont_emu_abundance/
#   - One `.tsv` file per sample with tax_id counts and relative abundances
# ðŸ“„ Documentation:
#   - Full pipeline details, filtering criteria, and HPC command logs:
#     â–¸ Protocols/Data_processing/README_16s_data_preprocessing.pdf
# ðŸ§¾ Step 0.4: Sample Tracking Metadata (PCR + Pooling)
# --------------------------------------------------
# The following files document the 16S plate setup, robot buffer input,
# and pooling decisions used to prepare samples for sequencing.
# These are **not used in the downstream R analysis**, but archived
# for provenance and reproducibility.
# ðŸ“„ Documents:
#   - 16S PCR plate metadata:
#   data/raw/16S_sequencing/16s_PCR/20231123_PCR_final.xlsx
#   - Opentrons robot buffer input:
#         data/raw/16S_sequencing/16s_PCR/pipetingrobot_muster/Buffer
#CSV_19-03-2024_namibia_plate16s.csv
#   - Opentrons robot sample input:
#         data/raw/16S_sequencing/16s_PCR/pipetingrobot_muster/Sample
#CSV_19-03-2024_namibia_plate16s.csv
#   - Sample pooling design:
#                data/raw/16S_sequencing/16s_PCR/pipetingrobot_muster/
#Sample_pooling_CSV_03-04-2024.csv
# ***********************************************************
# Part 1: Set Standard Settings & Load Libraries ----
# ***********************************************************
# Increase max overlaps for better plotting
options(ggrepel.max.overlaps = Inf)
# Set a reproducible seed
set.seed(13102023)
# Load & install required packages using pacman
if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman")
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, microViz, microbiomeAnalysis, ggraph, ggtext, corncob)
# ***********************************************************
# Part 2: Define Project File Paths ----
# ***********************************************************
# Dynamically detect the working directory
project_root <- here::here()
# Define primary directories
data_dir       <- file.path(project_root, "data")
raw_data       <- file.path(data_dir, "raw")
field_raw_tracking <- file.path(raw_data, "Field_tracking_data")
processed_data <- file.path(data_dir, "processed")
metadata_dir   <- file.path(data_dir, "metadata")
results_dir    <- file.path(project_root, "results")
figures_dir    <- file.path(results_dir, "figures")
tables_dir     <- file.path(results_dir, "tables")
scripts_dir    <- file.path(project_root, "scripts")
# ***********************************************************
# Define Column Selection Vectors for Analysis
# ***********************************************************
# ðŸ“Œ Trapping & Field Metadata Variables (rodent_data)
trapping_vars <- c(
"Latitude",
"Longitude",
"Morphology_species",
"Sex",
"Age",
"Weight_g",
"Location_type",
"Date"
)
# ***********************************************************
# 16S Sequencing Variables
# ***********************************************************
# ðŸ§¬ 16S Barcode & Sequencing Metadata
barcode_vars_16s <- c("barcode_16s", "conc_16s__PCR", "Gene")
# ðŸ§ª 16S Taxonomic Assignments
otu_16s_vars <- c(
"tax_id",
"count_16s",
"species",
"genus",
"family",
"order",
"class",
"phylum",
"superkingdom"
)
# ðŸ”¬ Combined 16S Selection Vector
microbiome_16s_vars <- c(barcode_vars_16s, otu_16s_vars)
# ***********************************************************
# 28S Sequencing Variables
# ***********************************************************
# ðŸ§¬ 28S Barcode & Sequencing Metadata
barcode_vars_28s <- c("barcode_28s")
count_vars_28s   <- c("count_28s")
metadata_vars_28s <- c("Date_28s_PCR", "Gene")
# ðŸ§ª 28S Taxonomic Assignments (same structure as 16S)
taxonomy_vars_shared <- c("tax_id", "species", "genus",
"family", "order", "class",
"phylum", "superkingdom")
# ðŸ”¬ Combined 28S Selection Vector
otu_28s_vars <- c(barcode_vars_28s, count_vars_28s,
taxonomy_vars_shared, metadata_vars_28s)
pal_uchicago(palette = c("default", "light", "dark"), alpha = 1)
# Load object
ps <- readRDS(file.path(processed_data, "phyloseq_16s_decontaminated.rds"))
pal_uchicago(palette = c("default", "light", "dark"), alpha = 1)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, microViz, microbiomeAnalysis, ggraph, ggtext, corncob,
ggsci)
# Load object
ps <- readRDS(file.path(processed_data, "phyloseq_16s_decontaminated.rds"))
pal_uchicago(palette = c("default", "light", "dark"), alpha = 1)
ps_fix <- ps
#subset of the ps1 object containing only those samples where more than 50% of the samples have a value greater than 5
ps1.1 = genefilter_sample(ps_fix, filterfun_sample(function(x) x > 5), A=0.5*nsamples(ps_fix))
ps2 = prune_taxa(ps1.1, ps_fix)
#relative abundance normalization
ps2.comp = transform_sample_counts(ps2, function(x) {x <- x + 0.5; x / sum(x)})
ps2.top20 <- prune_taxa(names(sort(taxa_sums(ps2.comp),TRUE)[1:50]), ps2.comp)
meta_top20 <- microbiome::meta(ps2.top20)
sample_data(ps2.top20) <- meta_top20
ps2 %>%
comp_barplot(tax_level = "Genus") +
coord_flip() # horizontal bars are often more readable
library(microViz)
install.packages("microViz")
library(microViz)
library(installr)
updateR()
updateR()
library(scales)
myPal <- tax_palette(
data = ps2, rank = "Species", n = 25, pal = "greenArmytage",
add = c(Other = "white")
)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, microViz, microbiomeAnalysis, ggraph, ggtext, corncob,
ggsci, scales)
install.packages("microbiomeAnalysis")
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, microViz)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, ggraph)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, ggraph)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, corncob)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, corncob, scales)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, corncob, scales, ggsci)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, corncob, scales, ggsci, microbiomeAnalysis)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, corncob, scales, ggsci,ggtext)
BiocManager::install("microbiome")
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, corncob, scales, ggsci)
message("ðŸ”¬ Starting the creation of compositional plos..")
# Load object
ps <- readRDS(file.path(processed_data, "phyloseq_16s_decontaminated.rds"))
pal_uchicago(palette = c("default", "light", "dark"), alpha = 1)
ps_fix <- ps
#subset of the ps1 object containing only those samples where more than 50% of the samples have a value greater than 5
ps1.1 = genefilter_sample(ps_fix, filterfun_sample(function(x) x > 5), A=0.5*nsamples(ps_fix))
ps2 = prune_taxa(ps1.1, ps_fix)
#relative abundance normalization
ps2.comp = transform_sample_counts(ps2, function(x) {x <- x + 0.5; x / sum(x)})
ps2.top20 <- prune_taxa(names(sort(taxa_sums(ps2.comp),TRUE)[1:50]), ps2.comp)
meta_top20 <- microbiome::meta(ps2.top20)
sample_data(ps2.top20) <- meta_top20
ps2 %>%
comp_barplot(tax_level = "Genus") +
coord_flip() # horizontal bars are often more readable
install.packages(
"microViz",
repos = c(davidbarnett = "https://david-barnett.r-universe.dev", getOption("repos"))
)
library(microViz)
install.packages("ggraph")
install.packages(
"microViz",
repos = c(davidbarnett = "https://david-barnett.r-universe.dev", getOption("repos"))
)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, corncob, scales, ggsci, microViz, ggraph, ggtext)
message("ðŸ”¬ Starting the creation of compositional plos..")
# Load object
ps <- readRDS(file.path(processed_data, "phyloseq_16s_decontaminated.rds"))
pal_uchicago(palette = c("default", "light", "dark"), alpha = 1)
ps_fix <- ps
#subset of the ps1 object containing only those samples where more than 50% of the samples have a value greater than 5
ps1.1 = genefilter_sample(ps_fix, filterfun_sample(function(x) x > 5), A=0.5*nsamples(ps_fix))
ps2 = prune_taxa(ps1.1, ps_fix)
#relative abundance normalization
ps2.comp = transform_sample_counts(ps2, function(x) {x <- x + 0.5; x / sum(x)})
ps2.top20 <- prune_taxa(names(sort(taxa_sums(ps2.comp),TRUE)[1:50]), ps2.comp)
meta_top20 <- microbiome::meta(ps2.top20)
sample_data(ps2.top20) <- meta_top20
ps2 %>%
microViz::comp_barplot(tax_level = "Genus") +
coord_flip() # horizontal bars are often more readable
ps2 %>%
comp_barplot(tax_level = "Genus") +
coord_flip() # horizontal bars are often more readable
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, corncob, scales, ggsci, microViz, ggraph, ggtext)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, corncob, scales, ggsci)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, corncob, scales, ggsci,microViz)
library(microViz)
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::install(c("phyloseq", "microbiome", "ComplexHeatmap"), update = FALSE)
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::install(c("phyloseq", "microbiome", "ComplexHeatmap"), update = FALSE)
install.packages(
"microViz",
repos = c(davidbarnett = "https://david-barnett.r-universe.dev", getOption("repos"))
)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, corncob, scales, ggsci, microViz)
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::install(c("phyloseq", "microbiome", "ComplexHeatmap"), update = FALSE)
options(repos = c(CRAN = "https://cran.rstudio.com/"))
BiocManager::install(c("phyloseq", "microbiome", "ComplexHeatmap"), update = FALSE)
install.packages("BiocManager")
BiocManager::install(c("phyloseq", "microbiome", "ComplexHeatmap"))
install.packages(
"microViz",
repos = c(davidbarnett = "https://david-barnett.r-universe.dev", getOption("repos"))
)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, corncob, scales, ggsci, microViz)
install.packages("ggtext") # for rotated labels on ord_plot()
install.packages("ggraph") # for taxatree_plots()
install.packages("DT") # for tax_fix_interactive()
install.packages("corncob") # for beta binomial models in tax_model()
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, corncob, scales, ggsci, microViz)
library(ggraph)
library(ggtext)
pacman::p_load(
tidyverse, janitor, readr, lubridate, ggplot2, phyloseq, vegan,
corrplot, patchwork, ggrepel, RColorBrewer, pheatmap, caret,
randomForest, rfUtilities, optimx, ggpubr, FactoMineR, factoextra,
leaflet, kableExtra, broom, magrittr, data.table, sf, rnaturalearth,
RColorBrewer, tmap, mapview, cowplot, magick, readxl, qgraph, vegan, ggvenn,
decontam, microbiome, corncob, scales, ggsci, microViz, ggraph, ggtext)
message("ðŸ”¬ Starting the creation of compositional plos..")
# Load object
ps <- readRDS(file.path(processed_data, "phyloseq_16s_decontaminated.rds"))
pal_uchicago(palette = c("default", "light", "dark"), alpha = 1)
ps_fix <- ps
#subset of the ps1 object containing only those samples where more than 50% of the samples have a value greater than 5
ps1.1 = genefilter_sample(ps_fix, filterfun_sample(function(x) x > 5), A=0.5*nsamples(ps_fix))
ps2 = prune_taxa(ps1.1, ps_fix)
#relative abundance normalization
ps2.comp = transform_sample_counts(ps2, function(x) {x <- x + 0.5; x / sum(x)})
ps2.top20 <- prune_taxa(names(sort(taxa_sums(ps2.comp),TRUE)[1:50]), ps2.comp)
meta_top20 <- microbiome::meta(ps2.top20)
sample_data(ps2.top20) <- meta_top20
ps2 %>%
comp_barplot(tax_level = "Genus") +
coord_flip() # horizontal bars are often more readable
myPal <- tax_palette(
data = ps2, rank = "Species", n = 25, pal = "greenArmytage",
add = c(Other = "white")
)
tax_palette_plot(myPal)
ps2 %>%
comp_barplot(tax_level = "genus") +
coord_flip() # horizontal bars are often more readable
ps2 = prune_samples(sample_sums(ps)>=200, ps)
ps2
ps <- ps2
ps2 = prune_samples(sample_sums(ps)>=200, ps)
ps2
ps <- ps2
tax_filter(min_prevalence = 2) %>%
tax_fix() %>%
phyloseq_validate()
tax_filter(min_prevalence = 2) %>%
tax_fix() %>%
phyloseq_validate()
ps_fix <- ps %>%
tax_fix(
min_length = 4,
unknowns = c(""),
sep = " ", anon_unique = TRUE,
suffix_rank = "classified"
)
data <- meta(ps_fix)
#subset of the ps1 object containing only those samples where more than 50% of the samples have a value greater than 5
ps1.1 = genefilter_sample(ps_fix, filterfun_sample(function(x) x > 5), A=0.5*nsamples(ps_fix))
ps2 = prune_taxa(ps1.1, ps_fix)
#relative abundance normalization
ps2.comp = transform_sample_counts(ps2, function(x) {x <- x + 0.5; x / sum(x)})
ps2.top20 <- prune_taxa(names(sort(taxa_sums(ps2.comp),TRUE)[1:50]), ps2.comp)
meta_top20 <- microbiome::meta(ps2.top20)
sample_data(ps2.top20) <- meta_top20
ps2 %>%
comp_barplot(tax_level = "genus") +
coord_flip() # horizontal bars are often more readable
myPal <- tax_palette(
data = ps2, rank = "Species", n = 25, pal = "greenArmytage",
add = c(Other = "white")
)
tax_palette_plot(myPal)
